model:
  base_learning_rate: 2.0e-06
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    # ckpt_path: "pretrained_DLDM/DLDM_pretrained/DLDM_epoch=000150.ckpt"
    linear_start: 0.0015
    linear_end: 0.0195
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: image
    cond_stage_key: class_label
    image_size: 64
    channels: 3
    cond_stage_trainable: true
    scale_by_std: true
    conditioning_key: crossattn
    monitor: train/loss_epoch
    use_ema: True
    scheduler_config:
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps:
        - 10000
        cycle_lengths:
        - 10000000000000
        f_start:
        - 1.0e-06
        f_max:
        - 1.0
        f_min:
        - 1.0
    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 64
        in_channels: 3
        out_channels: 3
        model_channels: 192
        attention_resolutions:
        - 1
        - 2
        - 4
        - 8
        num_res_blocks: 2
        channel_mult:
        - 1
        - 2
        - 2
        - 4
        - 4
        num_heads: 4
        use_spatial_transformer: true
        transformer_depth: 2
        context_dim: 512
    first_stage_config:
      target: ldm.models.autoencoder.DAE
      params:
        embed_dim: 7
        ckpt_path: "pretrained_DLDM/DLDM_pretrained/DAE_epoch=000053.ckpt"
        lossconfig:
          target: torch.nn.Identity
        enc_config:
          double_z: True
          z_channels: 7 # struct 2 style 4 mask 1
          resolution: 256
          in_channels: 5 # t2, flair, wb, bb, mask
          out_ch: 1
          ch: 128
          ch_mult: [ 1,2,4 ]  # num_down = len(ch_mult)-1
          num_res_blocks: 2
          attn_resolutions: [ ]
          dropout: 0.0
        dec_config:
          double_z: True
          z_channels: 3
          resolution: 256
          in_channels: 3
          out_ch: 1
          ch: 128
          ch_mult: [ 1,2,4 ]  # num_down = len(ch_mult)-1
          num_res_blocks: 2
          attn_resolutions: [ ]
          dropout: 0.0

        mask_dec_config:
          in_channels: 1
          out_channels: 1

    cond_stage_config:
      target: ldm.modules.encoders.modules.ClassEmbedder
      params:
        n_classes: 10
        embed_dim: 512
        key: class_label
data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 32
    num_workers: 5
    wrap: false
    train:
      target: ldm.data.meta.Trainset
      params:
        size: 256
    validation:
      target: ldm.data.meta.Validset
      params:
        size: 256

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 500
        max_images: 8
        increase_log_steps: False

  trainer:
    benchmark: True
